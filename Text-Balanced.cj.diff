--- lib/Text/Balanced.pm_orig	Sun Nov 18 12:49:51 2001
+++ lib/Text/Balanced.pm	Wed Apr 10 04:38:08 2002
@@ -10,7 +10,7 @@
 use SelfLoader;
 use vars qw { $VERSION @ISA %EXPORT_TAGS };
 
-$VERSION = '1.89';
+$VERSION = '1.89.hackedbycj2';
 @ISA		= qw ( Exporter );
 		     
 %EXPORT_TAGS	= ( ALL => [ qw(
@@ -52,6 +52,8 @@
 	return undef;
 }
 
+use Carp;
+
 sub _succeed
 {
 	$@ = undef;
@@ -67,7 +69,17 @@
 			push @res, substr($$textref,$from,$len);
 		}
 		if ($extralen) {	# CORRECT FILLET
-			my $extra = substr($res[0], $extrapos-$startlen, $extralen, "\n");
+			# cj hack: catch error when index is out of the range of the string. I
+			# don't understand why the error happens in the first place so probably 
+			# there are cases where I'm doing it wrong.
+			my $extra;
+			eval {
+				$extra = substr($res[0], $extrapos-$startlen, $extralen, "\n");
+			};
+			if ($@) {
+				warn "WARNING: ignoring error (with reason unknown by cj), returning";
+				return @res; ##? should we still do at least the pos stuff?
+			}
 			$res[1] = "$extra$res[1]";
 			eval { substr($$textref,$remainderpos,0) = $extra;
 			       substr($$textref,$extrapos,$extralen,"\n")} ;
@@ -657,7 +669,7 @@
 	    $oppos,
 	    $preld1pos,$ld1pos,$str1pos,$rd1pos,
 	    $preld2pos,$ld2pos,$str2pos,$rd2pos,
-	    $modpos) = ( length($$textref), pos($$textref) = pos($$textref) || 0 );
+	    $modpos);
 
 	unless ($$textref =~ m/\G($pre)/gc)
 	{
@@ -667,6 +679,14 @@
 		         pos $$textref;
 		return; 
 	}
+	# cj hack: ignore quotelikes inside comments. I'm not sure this works in all cases 
+	# since I don't understand most of the code, but it works for Filter::Simple
+	while ($$textref=~ /\G#.*/mgc) {
+		# warn "ran over a comment";
+	}
+	$textlen= length($$textref);
+	$startpos = pos($$textref)||0;
+	
 	$oppos = pos($$textref);
 
 	my $initial = substr($$textref,$oppos,1);
